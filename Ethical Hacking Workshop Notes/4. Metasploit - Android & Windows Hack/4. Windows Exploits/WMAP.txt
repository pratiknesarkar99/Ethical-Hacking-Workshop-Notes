Metasploit is considered the de facto standard when it comes to exploitation, it also contains modules for other activities, such as scanning

WMAP, a web application scanner available for use from within the Metasploit framework.

Set Up Metasploit Database
Metasploit utilizes a PostgreSQL database system, making it extremely useful to keep track of large amounts of information when conducting penetration tests. 
This allows for the import and export of scan results from other tools, as well as storage of discovered credentials, services, and other valuable data.

	msfdb init
	service postgresql start
	msfconsole
	db_status

Load WMAP

	load wmap
	?

Add Site to Scan

	wmap_sites

*] Usage: wmap_sites [options]
	-h        Display this help text
	-a [url]  Add site (vhost,url)
	-d [ids]  Delete sites (separate ids with space)
	-l        List all available sites
	-s [id]   Display site structure (vhost,url|ids) (level) (unicode output true/false)

	wmap_sites -a <url>

	wmap_sites -l

Specify Target URL

	wmap_targets

[*] Usage: wmap_targets [options]
	-h 		Display this help text
	-t [urls]	Define target sites (vhost1,url[space]vhost2,url)
	-d [ids]	Define target sites (id1, id2, id3 ...)
	-c 		Clean target sites list
	-l  		List all target sites

	wmap_targets -t http://172.16.1.102/dvwa/index.php

	wmap_targets -l

Run Scanner

	wmap_run

[*] Usage: wmap_run [options]
	-h                        Display this help text
	-t                        Show all enabled modules
	-m [regex]                Launch only modules that name match provided regex.
	-p [regex]                Only test path defined by regex.
	-e [/path/to/profile]     Launch profile modules against all matched targets.
	                          (No profile file runs all enabled modules.)

We can use wmap_run with the -t flag to list all the enabled modules before we scan the target.

	wmap_run -t

There are a few different categories of modules
To get a detailed description of any given module, use the info command followed by the full path of the module that's listed

	info auxiliary/scanner/http/http_version

begin the scan by using wmap_run with the -e

	wmap_run -e

Interpret Results

	wmap_vulns -l